#BlueJ class context
comment0.params=
comment0.target=QueryDepotList()
comment1.params=file
comment1.target=QueryDepotList(java.lang.String)
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Representaci\u00F3n\ de\ una\ lista\ de\ queries.\r\n
comment2.params=
comment2.target=int\ numQueries()
comment2.text=\r\n\ Devuelve\ el\ n\u00FAmero\ de\ consultas\ diferentes\ (sin\ contar\ repeticiones)\ que\r\n\ hay\ almacenadas\ en\ el\ dep\u00F3sito\r\n\ \r\n\ @returns\ el\ n\u00FAmero\ de\ consultas\ diferentes\ almacenadas\r\n
comment3.params=q
comment3.target=int\ getFreqQuery(java.lang.String)
comment3.text=\r\n\ Consulta\ la\ frecuencia\ de\ una\ consulta\ en\ el\ dep\u00F3sito\r\n\ \r\n\ @returns\ la\ frecuencia\ de\ la\ consulta.\ Si\ no\ existe,\ devolver\u00E1\ 0\r\n\ @param\ el\ texto\ de\ la\ consulta\r\n
comment4.params=prefix
comment4.target=interfaces.ListIF\ listOfQueries(java.lang.String)
comment4.text=\r\n\ Dado\ un\ prefijo\ de\ consulta,\ devuelve\ una\ lista,\ ordenada\ por\ frecuencias\r\n\ de\ mayor\ a\ menor,\ de\ todas\ las\ consultas\ almacenadas\ en\ el\ dep\u00F3sito\ que\r\n\ comiencen\ por\ dicho\ prefijo\r\n\ \r\n\ @returns\ la\ lista\ de\ consultas\ ordenada\ por\ frecuencias\ y\ orden\r\n\ lexicogr\u00E1fico\ en\ caso\ de\ coincidencia\ de\ frecuencia\r\n\ \r\n\ @param\ el\ prefijo\r\n
comment5.params=q
comment5.target=void\ incFreqQuery(java.lang.String)
comment5.text=\r\n\ Incrementa\ en\ uno\ la\ frecuencia\ de\ una\ consulta\ en\ el\ dep\u00F3sito\ Si\ la\r\n\ consulta\ no\ exist\u00EDa\ en\ la\ estructura,\ la\ deber\u00E1\ a\u00F1adir\r\n\ \r\n\ @param\ el\ texto\ de\ la\ consulta\r\n
comment6.params=q
comment6.target=void\ decFreqQuery(java.lang.String)
comment6.text=\r\n\ Decrementa\ en\ uno\ la\ frecuencia\ de\ una\ consulta\ en\ el\ dep\u00F3sito\ Si\ la\r\n\ frecuencia\ decrementada\ resultase\ ser\ 0,\ deber\u00E1\ eliminar\ la\ informaci\u00F3n\r\n\ referente\ a\ la\ consulta\ del\ dep\u00F3sito\r\n\ \r\n\ @precondici\u00F3n\ la\ consulta\ debe\ estar\ ya\ en\ el\ dep\u00F3sito\r\n\ \r\n\ @param\ el\ texto\ de\ la\ consulta\r\n
comment7.params=q
comment7.target=Query\ findQueryText(Query)
comment7.text=\r\n\ \r\n\ @param\ query\ a\ buscar.\r\n\ @return\ la\ query\ buscada\ o\ null\ si\ no\ existe\ en\ el\ dep\u00F3sito.\r\n
comment8.params=list\ q
comment8.target=interfaces.ListIF\ remove(interfaces.ListIF,\ Query)
comment8.text=\r\n\ Elimina\ la\ query\ de\ la\ lista\ pasado\ como\ par\u00E1metro.\r\n\ @param\ la\ lista\ sobre\ la\ que\ eliminar\ la\ query.\r\n\ @param\ query\ a\ eliminar.\r\n\ @return\ la\ lista\ sin\ la\ query\ o\ la\ misma\ lista\ si\ no\ existiese.\r\n
comment9.params=queries\ element\ comparator
comment9.target=interfaces.ListIF\ sortInsert(interfaces.ListIF,\ Query,\ interfaces.ComparatorIF)
comment9.text=\r\n\ Realiza\ una\ inserci\u00F3n\ ordenada\ en\ la\ lista.\r\n\ @param\ queries\ el\ dep\u00F3sito\ de\ consultas.\r\n\ @param\ element\ el\ elemento\ a\ introducir.\r\n\ @param\ comparator\ un\ comparador\ de\ queries.\r\n\ @return\ la\ lista\ con\ el\ elemento\ insertado\ en\ su\ orden.\r\n
numComments=11
